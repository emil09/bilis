/*!
 DataTables Bootstrap 3 integration
 Â©2011-2015 SpryMedia Ltd - datatables.net/license
*/
! function(e) {
    "function" == typeof define && define.amd ? define(["jquery", "datatables.net"], function(a) {
        return e(a, window, document)
    }) : "object" == typeof exports ? module.exports = function(a, t) {
        return a || (a = window), t && t.fn.dataTable || (t = require("datatables.net")(a, t).$), e(t, a, a.document)
    } : e(jQuery, window, document)
}(function(e, a, t) {
    var n = e.fn.dataTable,
        o = window.location.pathname,
        s = o.split("/"),
        l = s[s.length - 1],
        r = s[s.length - 2];
    return "driver" == l || "unit" == l && "sales" == r ? e.extend(!0, n.defaults, {
        dom: "<'row'<'col-sm-6 clearfix'l><'col-sm-6 clearfix'f>><'row'<'col-sm-12'tr>><'row'<'col-sm-5'i><'col-sm-7'p>>",
        renderer: "bootstrap"
    }) : e.extend(!0, n.defaults, {
        dom: "<'row'<'col-sm-6'l><'col-sm-12 clearfix'f>><'row'<'col-sm-12'tr>><'row'<'col-sm-5'i><'col-sm-7'p>>",
        renderer: "bootstrap"
    }), e.extend(n.ext.classes, {
        sWrapper: "dataTables_wrapper form-inline dt-bootstrap",
        sFilterInput: "form-control input-sm",
        sLengthSelect: "form-control input-sm",
        sProcessing: "dataTables_processing panel panel-default"
    }), n.ext.renderer.pageButton.bootstrap = function(a, o, s, l, r, i) {
        var d, c, p, u = new n.Api(a),
            b = a.oClasses,
            f = a.oLanguage.oPaginate,
            m = a.oLanguage.oAria.paginate || {},
            T = 0,
            g = function(t, n) {
                var o, l, p, w, x = function(a) {
                    a.preventDefault(), !e(a.currentTarget).hasClass("disabled") && u.page() != a.data.action && u.page(a.data.action).draw("page")
                };
                for (o = 0, l = n.length; l > o; o++)
                    if (w = n[o], e.isArray(w)) g(t, w);
                    else {
                        switch (c = d = "", w) {
                            case "ellipsis":
                                d = "&#x2026;", c = "disabled";
                                break;
                            case "first":
                                d = f.sFirst, c = w + (r > 0 ? "" : " disabled");
                                break;
                            case "previous":
                                d = f.sPrevious, c = w + (r > 0 ? "" : " disabled");
                                break;
                            case "next":
                                d = f.sNext, c = w + (i - 1 > r ? "" : " disabled");
                                break;
                            case "last":
                                d = f.sLast, c = w + (i - 1 > r ? "" : " disabled");
                                break;
                            default:
                                d = w + 1, c = r === w ? "active" : ""
                        }
                        d && (p = e("<li>", {
                            "class": b.sPageButton + " " + c,
                            id: 0 === s && "string" == typeof w ? a.sTableId + "_" + w : null
                        }).append(e("<a>", {
                            href: "#",
                            "aria-controls": a.sTableId,
                            "aria-label": m[w],
                            "data-dt-idx": T,
                            tabindex: a.iTabIndex
                        }).html(d)).appendTo(t), a.oApi._fnBindAction(p, {
                            action: w
                        }, x), T++)
                    }
            };
        try {
            p = e(o).find(t.activeElement).data("dt-idx")
        } catch (w) {}
        g(e(o).empty().html('<ul class="pagination"/>').children("ul"), l), p && e(o).find("[data-dt-idx=" + p + "]").focus()
    }, n.TableTools && (e.extend(!0, n.TableTools.classes, {
        container: "DTTT btn-group",
        buttons: {
            normal: "btn btn-default",
            disabled: "disabled"
        },
        collection: {
            container: "DTTT_dropdown dropdown-menu",
            buttons: {
                normal: "",
                disabled: "disabled"
            }
        },
        print: {
            info: "DTTT_print_info"
        },
        select: {
            row: "active"
        }
    }), e.extend(!0, n.TableTools.DEFAULTS.oTags, {
        collection: {
            container: "ul",
            button: "li",
            liner: "a"
        }
    })), n
});